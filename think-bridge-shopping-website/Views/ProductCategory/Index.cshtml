@model think_bridge_shopping_website.Models.ProductCategoryViewModel
@{
    ViewBag.Title = "Product Catagory";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content success-page-cont">
    <div class="container-fluid">

        <div class="row justify-content-center">
            <div class="col-lg-12">

                <!-- Success Card -->
                <div class="card success-card">
                    <div class="card-body">
                        <div class="success-cont">
                            @using (Html.BeginForm("Index", "ProductCatagory", FormMethod.Post))
                            {
                                <div class="content container-fluid">
                                    <!-- Page Header -->
                                    <div class="page-header">
                                        <div class="row" style="padding-top: 30px;">
                                            <div class="col-sm-7 col-auto">
                                                <h3 class="page-title">Product Category</h3>
                                                <ul class="breadcrumb">
                                                    <li class="breadcrumb-item"><a href="~/">Dashboard</a></li>
                                                    <li class="breadcrumb-item active">Product Categories</li>
                                                </ul>
                                            </div>
                                            <div class="col-sm-5 col">
                                                <a href="#divProductCatagoriesBody" data-toggle="modal" class="btn btn-primary text-white float-right mt-2"><i class="fa fa-plus-square"></i>&nbsp;Product Category</a>
                                            </div>
                                        </div>
                                    </div>
                                    @if (ViewBag.Message != null)
                                    {
                                        <h6 class="text-danger">@ViewBag.Message</h6>
                                    }
                                    <!-- /Page Header -->
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="table-responsive">
                                                        <table class="datatable table table-hover table-center mb-0">
                                                            <thead>
                                                                <tr>
                                                                    <th>Product Categories</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="productCatagoriesBody"></tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <!-- /Success Card -->

            </div>
        </div>

    </div>
</div>

@using (Html.BeginForm("Create", "ProductCategory", FormMethod.Post))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.AntiForgeryToken()
    <!--Product Catagory Add Modal -->
    <div class="modal fade" id="divProductCatagoriesBody" aria-hidden="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Product Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row form-row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label>Product Category</label>
                                    @Html.EditorFor(model => model.category_name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.category_name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-success text-white btn-block">Save Product Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- /Product Catagory Add Modal -->
}

@using (Html.BeginForm("Edit", "ProductCategory", FormMethod.Post))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.AntiForgeryToken()
    <!--Produc tCatagory Update Modal -->
    <label id="lblProductCatagoryId" style="display: none;"></label>
    <div class="modal fade" id="divUpdateProductCatagoryBody" aria-hidden="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Product Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        @Html.HiddenFor(model => model.Id)
                        <div class="row form-row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label>Product Category</label>
                                    @Html.EditorFor(model => model.category_name, new { htmlAttributes = new { @class = "form-control", @id = "update_product_Catagory" } })
                                    @Html.ValidationMessageFor(model => model.category_name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-warning text-white btn-block">Update Product Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- /Product Catagory Update Modal -->
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {


            window.applicationBaseUrl = @Html.Raw(HttpUtility.JavaScriptStringEncode(
                        new Uri(
                                    new Uri(this.Context.Request.Url.GetLeftPart(UriPartial.Authority)),
                                    Url.Content("~/")
                                ).ToString(), true));

            getAllProductCatagories();
        });

        function getAllProductCatagories() {
            $.ajax({
                type: 'GET',
                url: window.applicationBaseUrl + 'ProductCategory/GetAllProductCatagories',
                datatype: JSON,
                data: {
                },
                success: function (data) {
                    $('#productCatagoriesBody').empty();

                    $.each(data, function (i, item) {
                        var productCatagories =
                               "<tr><td>"
                                + "<a href='#'" +
                                "onclick='openProductCatagoriesModal(" + item.Id + ")'>"
                            + item.category_name
                                + "</a></td>"
                                + "</tr>";

                        $('#productCatagoriesBody').append(productCatagories);
                    });

                    $('.datatable').DataTable({});
                },
                error: function (data) {
                }
            });
        }

        function openProductCatagoriesModal(productCatagoryId)
        {
            $("#Id").val(productCatagoryId);
            $.ajax({
                type: 'GET',
                url: window.applicationBaseUrl + 'ProductCategory/GetProductCatagoriesDetails/' + productCatagoryId,
                datatype: JSON,
                data: {
                    'productCatagoryId': productCatagoryId
                },
                success: function (data) {
                    $("#update_product_Catagory").val(data.category_name);
                },
                error: function (err) {
                    alert("Failed to fetch data!");
                }
            });

            $('#divUpdateProductCatagoryBody').modal();
        }

    </script>
}

